import dbparseimport inspectfrom dbparse import MergeFileType    def test_mergefiletype():    mfts = []    mft = MergeFileType(inputName=["Artist", "ArtistAlbumMap", "ArtistTrackMap", "ArtistRelatedMap"],                        inputType="Artist", outputName=None, outputFormat="DataFrame")    mfts.append(mft)        mft = MergeFileType(inputName="ShuffleArtistMedia", inputType="Shuffle",                        outputName="ArtistMediaMap", outputFormat="Series")    mfts.append(mft)        for mft in mfts:        assert isinstance(mft.getOutput(), dict), f"output [{mft.getOutput()}] is not a dict"        assert hasattr(mft, "mergeClassName"), f"[{mft}] does not have a mergeClassName attr"        mergeClassName = getattr(mft, "mergeClassName")        assert isinstance(mergeClassName, str), f"pft [{mft}] mergeClassName is not a str"        mergeClass = getattr(dbparse, mergeClassName)        assert inspect.isclass(mergeClass), f'mergeClass [{mft.mergeClassName}] is not a class'        assert hasattr(mergeClass, "merge"), f"merge Class [{mergeClassName}] does not have a merge function"if __name__ == "__main__":    test_mergefiletype()